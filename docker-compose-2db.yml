version: '2.1'

networks:
  monitor-net:
    driver: bridge

volumes:
    prometheus_data: {}
    grafana_data: {}
    influxdb_data: {}
    influxdb2_data: {}

services:

  prometheus:
    image: prom/prometheus:v2.3.1
    container_name: prometheus
    volumes:
      - ./prometheus2/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention=200h'
      - '--web.enable-lifecycle'
    environment:
      - INFLUXDB_DB=${INFLUX_DB:-db0}
      - INFLUXDB_USER=${INFLUXDB_WRITE_USER:-mon_write}
      - INFLUXDB_USER_PASSWORD=${INFLUXDB_WRITE_USER_PASSWORD:-mon_write}
    restart: unless-stopped
    expose:
      - 9090
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  influxdb:
    image: library/influxdb:latest
    container_name: influxdb
    volumes: 
      - influxdb_data:/var/lib/influxdb
#    command:
#      - '/init-influxdb.sh'
    environment:
      - INFLUXDB_DB=${INFLUX_DB:-db0}
      - INFLUXDB_ADMIN_USER=${ADMIN_USER:-admin}
      - INFLUXDB_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - INFLUXDB_USER=${INFLUXDB_USER:-monitor}
      - INFLUXDB_USER_PASSWORD=${INFLUXDB_USER_PASSWORD:-monitor}
      - INFLUXDB_READ_USER=${INFLUXDB_READ_USER:-mon_read}
      - INFLUXDB_READ_USER_PASSWORD=${INFLUXDB_READ_USER_PASSWORD:-mon_read}
      - INFLUXDB_WRITE_USER=${INFLUXDB_WRITE_USER:-mon_write}
      - INFLUXDB_WRITE_USER_PASSWORD=${INFLUXDB_WRITE_USER_PASSWORD:-mon_write}
      - INFLUXDB_HTTP_AUTH_ENABLED=${INFLUXDB_HTTP_AUTH_ENABLED:-true}
      - INFLUXDB_RETENTION_ENABLED=${INFLUXDB_RETENTION_ENABLED:-false}
      - INFLUXDB_REPORTING_DISABLED=${INFLUXDB_REPORTING_DISABLED:-true}
    restart: unless-stopped
    expose: 
      - 8086
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  influxdb2:
    image: library/influxdb:latest
    container_name: influxdb2
    volumes: 
      - influxdb2_data:/var/lib/influxdb
#    command:
#      - '/init-influxdb.sh'
    environment:
      - INFLUXDB_DB=${INFLUX_DB:-db0}
      - INFLUXDB_ADMIN_USER=${ADMIN_USER:-admin}
      - INFLUXDB_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - INFLUXDB_USER=${INFLUXDB_USER:-monitor}
      - INFLUXDB_USER_PASSWORD=${INFLUXDB_USER_PASSWORD:-monitor}
      - INFLUXDB_READ_USER=${INFLUXDB_READ_USER:-mon_read}
      - INFLUXDB_READ_USER_PASSWORD=${INFLUXDB_READ_USER_PASSWORD:-mon_read}
      - INFLUXDB_WRITE_USER=${INFLUXDB_WRITE_USER:-mon_write}
      - INFLUXDB_WRITE_USER_PASSWORD=${INFLUXDB_WRITE_USER_PASSWORD:-mon_write}
      - INFLUXDB_HTTP_AUTH_ENABLED=${INFLUXDB_HTTP_AUTH_ENABLED:-true}
      - INFLUXDB_RETENTION_ENABLED=${INFLUXDB_RETENTION_ENABLED:-false}
      - INFLUXDB_REPORTING_DISABLED=${INFLUXDB_REPORTING_DISABLED:-true}
      - INFLUXDB_HTTP_BIND_ADDRESS=:28086
    restart: unless-stopped
    expose: 
      - 28086
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  influxadapter:
    image: pgillich/prometheus-remote_storage_adapter
    container_name: influxadapter
    environment:
      - INFLUXDB_URL=http://influxdb:8086/
      - INFLUXDB_DATABASE=${INFLUX_DB:-db0}
      - INFLUXDB_RETENTION_POLICY=autogen
      - INFLUXDB_USER=${INFLUXDB_WRITE_USER:-mon_write}
      - INFLUXDB_PW=${INFLUXDB_WRITE_USER_PASSWORD:-mon_write}
    restart: unless-stopped
    expose: 
      - 9201
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  influxadapter2:
    image: pgillich/prometheus-remote_storage_adapter
    container_name: influxadapter2
    environment:
      - INFLUXDB_URL=http://influxdb2:28086/
      - INFLUXDB_DATABASE=${INFLUX_DB:-db0}
      - INFLUXDB_RETENTION_POLICY=autogen
      - INFLUXDB_USER=${INFLUXDB_WRITE_USER:-mon_write}
      - INFLUXDB_PW=${INFLUXDB_WRITE_USER_PASSWORD:-mon_write}
    restart: unless-stopped
    expose: 
      - 9201
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  alertmanager:
    image: prom/alertmanager:v0.14.0
    container_name: alertmanager
    volumes: 
      - ./alertmanager/:/etc/alertmanager/
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    expose:
      - 9093
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  nodeexporter:
    image: prom/node-exporter:v0.15.2
    container_name: nodeexporter
    user: root
    privileged: true
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  cadvisor:
    image: google/cadvisor:v0.28.3
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      #- /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    restart: unless-stopped
    expose:
      - 8080
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
  
  grafana:
    image: grafana/grafana:4.6.3
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/datasources:/etc/grafana/datasources
      - ./grafana/dashboards:/etc/grafana/dashboards
      - ./grafana/setup.sh:/setup.sh
    entrypoint: /setup.sh
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    expose:
      - 3000
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  caddy:
    image: stefanprodan/caddy
    container_name: caddy
    ports:
      - "3000:3000"
      - "9090:9090"
      - "9093:9093"
      - "8086:8086"
      - "28086:28086"
    volumes:
      - ./caddy/:/etc/caddy/
    environment:
      - ADMIN_USER=${ADMIN_USER:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
    restart: unless-stopped
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"
